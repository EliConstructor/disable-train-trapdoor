plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name 'Shedman maven'
		url 'https://maven.shedaniel.me/'
	}

	maven {
		name 'blamejared'
		url 'https://maven.blamejared.com'
	}
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://maven.tterrag.com/" }
	maven { url = "https://jitpack.io/" }
	maven {
		url 'https://www.cursemaven.com'
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup("com.jamieswhiteshirt")
		}
	}
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://maven.cafeteria.dev/releases" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
}


dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	modImplementation("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}")
	modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")

	modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")

	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}")

	modImplementation("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}+${project.minecraft_version}")

	modCompileOnly("curse.maven:cc-restitched-462672:3723736")

	modImplementation("com.tterrag.registrate_fabric:Registrate:${project.registrate_version}-MC${project.minecraft_version}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

